# Launch [Builds, (re)creates, starts] using $ docker compose
#
# Custom ROS2/Ubuntu Docker Image&Container for RaspberryPI(arm64v8 CPU Architecture)
#  - Enabling hardware access like I2C, GPIO and SPI.
#
# Prerequisite - On docker host: 
#   I) Raspberry Pi(arm64v8) with Ubuntu & Docker installed.
#  II) Enable x11 gui from inside the Docker Image/Container.
#       $ xhost local:docker
#----------------------
# Commands:
#   1)  Enable X11 from inside the Docker Image/Container
#       $ xhost local:docker
#
#   2a) Create/Start Container from Image : 
#       $ docker compose up --detach --build
#   2b) List running/active/paused
#       $ docker compose ps -all
#
#   3)  Connect bash to existing/new container: 
#       $ ./docker_exec.sh
#          OR
#       $ docker exec -it pet-base-galactic_container bash
#
#   4)  Stop, or remove, your container once you've finished with them.
#       $ docker compose pause / unpause
#       $ docker compose stop / start
#       $ docker compose down    (stop & remove container)
#       $ docker container kill pet-mk-iv-simulation_container
#       $ docker container prune
#----------------------
# Maintainer: stefan.kull@gmail.com
# License: MIT
# https://github.com/Pet-Series
#
#  - ROS2 version: ROS2/Galactic Geoclone(arm64v8)    <- No longer supported 2022-...
#  - ROS1 version: ROS1/Noetic Ninjemys(arm64v8)      <- No longer supported 2019-...
#  - OS version:   Ubuntu 20.04 LTS/Focal Fossa(arm64v8)
#
# More info: 
#  - https://github.com/Pet-Series/pet_docker
#  - https://hub.docker.com/repositories/kullken
#  - https://hub.docker.com/repository/docker/kullken/ros2_arm64v8
#  - https://hub.docker.com/_/ros
#  - https://index.ros.org/p/ros1_bridge/github-ros2-ros1_bridge/
#  - https://hub.docker.com/r/arm64v8/ros/tags?page=1&name=galactic
#  - https://hub.docker.com/r/arm64v8/ros/tags?page=1&name=noetic

  ros2:
    build: .
    image: kullken/ros2_arm64v8:pet-base-galactic
    container_name: pet-base-galactic_container
    labels:
      - "se.pet-series.description=ROS2 Galactic Pet-series(label)"
    environment:
      - DISPLAY=${DISPLAY}
      - HOSTUSER=${USER} 
    privileged: true
    network_mode: host
    devices:
      #- /dev/ttyUSB0:/dev/ttyUSB0    # USB
      - /dev/gpiomem:/dev/gpiomem:rw     # GPIO memory mapping
      - /dev/i2c-1:/dev/i2c-1:rw         # I2C-1
      #- "/dev/i2c-2:/dev/i2c-2"         # I2C-2
      - /dev/spidev0.0:/dev/spidev0.0:rw # SPI.0
      - /dev/spidev0.1:/dev/spidev0.1:rw # SPI.1
      - /dev/vchiq:/dev/vchiq:ro         # Broadcom/CPU-core stuff...

    volumes:
      - /home/pi/ws_ros2:/home/pet/ws_ros2:rw   # Shared developing/source code folder.
      - /etc/localtime:/etc/localtime:ro        # Sync docker image/container date & timezone with docker-host
      - /proc/device-tree:/proc/device-tree:ro  # Broadcom/CPU-core stuff...
      - /usr/bin/vcgencmd:/usr/bin/vcgencmd:ro  # Broadcom/CPU-core stuff...
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    # restart: always
    # restart: unless-stopped
    command: 
      - /bin/bash