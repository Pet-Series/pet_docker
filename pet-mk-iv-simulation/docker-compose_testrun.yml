# Launch [Builds, (re)creates, starts] with: 
# $ docker compose --file docker-compose_testrun.yml up
#
# Connect shell/bash by:
# $ xhost local:docker
# $ docker exec -it pet-mk-iv-simulation_container bash
#
# Remove
# $ docker compose down
#----------------------
# Maintainer: stefan.kull@gmail.com
# Licens: MIT
# https://github.com/Pet-Series

# "noetic" = ROS1
# "focal"  = Ubuntu 20.04 

# More info: https://github.com/Pet-Series/pet_docker
# More info: https://hub.docker.com/repositories/kullken
# More info: https://hub.docker.com/repository/docker/kullken/ros1_amd64
services:
  spawn-world:
    user: pet
    build: .
    image: kullken/ros1_amd64:pet-mk-iv-simulation
    container_name: pet-mk-iv-simulation_world_container
    labels:
      - "se.pet-series.description=ROS1 Noetic for Pet-Mk.IV(label)"
    deploy:
      labels:
        - "se.pet-series.description=ROS1 Noetic for Pet-Mk.IV(service)"
    environment:
      - DISPLAY=${DISPLAY}
    privileged: true
    network_mode: "host"
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    #command: bash -c "ls -l && pwd && whoami"
    #command: bash
    #command: roslaunch pet_mk_iv_simulation spawn_pet_mk_iv.launch
    #command: source ~/.bashrc && roslaunch pet_mk_iv_description rviz.launch
    #command: rosrun pet_mk_iv_mission_control testrun_01_avoid-wall-line-stop.py
    #entrypoint: bash -c "~/.bashrc && roslaunch pet_mk_iv_simulation pet_play_yard-02.launch"
    #entrypoint: bash -c "source ~/ws_ros1/devel/setup.bash && roslaunch pet_mk_iv_simulation pet_play_yard-02.launch"
    #entrypoint: bash -c "source /home/pet/ws_ros1/devel/setup.bash && roslaunch pet_mk_iv_simulation pet_play_yard-03.launch"
    #entrypoint: bash -c "../.bashrc && roslaunch pet_mk_iv_description rviz.launch"
    entrypoint: bash