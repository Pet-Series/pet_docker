# Launch [Builds, (re)creates, starts] using $ docker compose
#
# Prerequisite - On docker host: 
#       I) That '$ xhost local:docker' is run before container is started - To enable GUI/X11 applications inside container
#----------------------
# Commands:
#   1)  Enable X11 from inside the Docker Image/Container
#       $ xhost local:docker
#
#   2a) Create/Start Container from Image : 
#       $ docker compose up --detach --build
#   2b) List running/active/paused
#       $ docker compose ps -all
#
#   3)  Connect bash to existing/new container: 
#       $ docker exec -it jazzy-full-pico-container bash
#          OR
#       $ ./docker_exec.sh
#
#   4)  Stop, or remove, your container once you've finished with them.
#       $ docker conpose pause / unpause
#       $ docker compose stop / start
#       $ docker compose down    (stop & remove container)
#       $ docker container kill pet-mk-iv-simulation_container
#       $ docker container prune
#----------------------
# Maintainer: stefan.kull@gmail.com
# Licens: MIT
# https://github.com/Pet-Series
#
# "noetic" = ROS1
# "focal"  = Ubuntu 20.04 
#----------------------
# More info: https://github.com/Pet-Series/pet_docker
# More info: https://hub.docker.com/repositories/kullken
# More info: https://hub.docker.com/repository/docker/kullken/ros1_amd64
services:
  ros1:
    build: .
    image: kullken/ros1_amd64:pet-mk-iv-simulation
    container_name: pet-mk-iv-simulation_container
    labels:
      - "se.pet-series.description=ROS1 Noetic for Pet-Mk.IV(label)"
    deploy:
      labels:
        - "se.pet-series.description=ROS1 Noetic for Pet-Mk.IV(service)"
    environment:
      - DISPLAY=${DISPLAY}
    privileged: true
    network_mode: "host"
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    # restart: always
    # restart: unless-stopped
    # command: [ "roscore" ] 